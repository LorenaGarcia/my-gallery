{"version":3,"sources":["images/profile.png","images/photo1.png","images/photo2.png","images/photo3.png","images/photo4.png","images/photo5.png","images/photo6.png","components/footer.js","components/header.js","components/gallery.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ContainerFooter","styled","div","Footer","Container","ImageUser","img","Title","p","SubTitle","Social","Information","Text","Numbers","Header","src","Image","StyledImage","css","ImageContainer1","ImageContainer2","ImageContainer3","ImageContainer4","ImageContainer5","ImageContainer6","Gallery","Image1","Image2","Image3","Image4","Image6","Image5","header","GridHeader","GridMain","GridFooter","footer","Home","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gaCGpC,IAAMC,EAAkBC,IAAOC,IAAV,KAiBbC,EAJA,WACb,OAAO,kBAACH,EAAD,qC,8vDCbF,IAAMI,EAAYH,IAAOC,IAAV,KAITG,EAAYJ,IAAOK,IAAV,KAKTC,EAAQN,IAAOO,EAAV,KAULC,EAAWR,IAAOO,EAAV,KAURE,EAAST,IAAOC,IAAV,KAONS,EAAcV,IAAOC,IAAV,KAcXU,EAAOX,IAAOO,EAAV,KAgBJK,EAAUZ,IAAOO,EAAV,KAyCLM,EAxBA,WACb,OACE,kBAACV,EAAD,KACE,kBAACC,EAAD,CAAWU,IAAKC,MAChB,kBAACT,EAAD,wBACA,kBAACE,EAAD,0BACA,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,kBAACE,EAAD,YACA,kBAACD,EAAD,eAEF,kBAACD,EAAD,KACE,kBAACE,EAAD,cACA,kBAACD,EAAD,kBAEF,kBAACD,EAAD,KACE,kBAACE,EAAD,cACA,kBAACD,EAAD,sB,83CC/FH,IAAMR,EAAYH,IAAOC,IAAV,KAgBhBe,EAAcC,YAAH,KAQJC,EAAkBlB,IAAOK,IAAV,IACxBW,GAMSG,GAAkBnB,IAAOK,IAAV,IACxBW,GAMSI,GAAkBpB,IAAOK,IAAV,IACxBW,GAMSK,GAAkBrB,IAAOK,IAAV,IACxBW,GAMSM,GAAkBtB,IAAOK,IAAV,IACxBW,GAMSO,GAAkBvB,IAAOK,IAAV,IACxBW,GAwBWQ,GAlBC,WACd,OACE,kBAAC,EAAD,KACE,kBAACN,EAAD,CAAiBJ,IAAKW,MAEtB,kBAACN,GAAD,CAAiBL,IAAKY,MAEtB,kBAACN,GAAD,CAAiBN,IAAKa,MAEtB,kBAACN,GAAD,CAAiBP,IAAKc,MAEtB,kBAACN,GAAD,CAAiBR,IAAKe,MAEtB,kBAACN,GAAD,CAAiBT,IAAKgB,Q,mwBClFrB,IAAM3B,GAAYH,IAAO+B,OAAV,MAyBTC,GAAahC,IAAO+B,OAAV,MAIVE,GAAWjC,IAAOC,IAAV,MAIRiC,GAAalC,IAAOmC,OAAV,MAoBRC,GAhBF,WACX,OACE,kBAAC,GAAD,KACE,kBAACJ,GAAD,KACE,kBAAC,EAAD,OAEF,kBAACC,GAAD,KACE,kBAAC,GAAD,OAEF,kBAACC,GAAD,KACE,kBAAC,EAAD,SC1COG,OARf,WACE,OACE,6BACE,kBAAC,GAAD,QCMcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.eedbb6ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.45fbcc4c.png\";","module.exports = __webpack_public_path__ + \"static/media/photo1.d77b0079.png\";","module.exports = __webpack_public_path__ + \"static/media/photo2.53f30930.png\";","module.exports = __webpack_public_path__ + \"static/media/photo3.7338ffe4.png\";","module.exports = __webpack_public_path__ + \"static/media/photo4.203a4e5b.png\";","module.exports = __webpack_public_path__ + \"static/media/photo5.9d70b06d.png\";","module.exports = __webpack_public_path__ + \"static/media/photo6.2a338297.png\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const ContainerFooter = styled.div`\n  font-family: Montserrat;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n  color: #a9a9a9;\n  text-align: center;\n\n  @media (max-width: 480px) {\n  }\n`;\n\nconst Footer = () => {\n  return <ContainerFooter>Lorraine @ DevChallenges.io</ContainerFooter>;\n};\n\nexport default Footer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Image from \"../images/profile.png\";\n\nexport const Container = styled.div`\n  text-align: center;\n`;\n\nexport const ImageUser = styled.img`\n  width: 150px;\n  border-radius: 50px;\n`;\n\nexport const Title = styled.p`\n  font-family: Montserrat;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 29px;\n  color: #4e5150;\n  margin-top: 10px;\n`;\n\nexport const SubTitle = styled.p`\n  font-family: Montserrat;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n  color: #a9a9a9;\n  margin-top: -15px;\n`;\n\nexport const Social = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 15px;\n  margin-bottom: 20px;\n`;\n\nexport const Information = styled.div`\n  border-radius: 20px;\n  width: 100px;\n  height: 67px;\n  background-color: #e5e5e5;\n  margin: 15px;\n\n  @media (max-width: 480px) {\n    margin: 5px;\n    width: 80px;\n    height: 58px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-family: Montserrat;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n  text-align: center;\n  color: #4e5150;\n  margin-top: 0px;\n\n  @media (max-width: 480px) {\n    font-size: 12px;\n    line-height: 15px;\n  }\n`;\n\nexport const Numbers = styled.p`\n  font-family: Montserrat;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-align: center;\n  color: #4e5150;\n  margin-top: 15%;\n  margin-bottom: 2px;\n\n  @media (max-width: 480px) {\n    font-size: 12px;\n    line-height: 15px;\n  }\n`;\n\nconst Header = () => {\n  return (\n    <Container>\n      <ImageUser src={Image} />\n      <Title> Rodney Cotton </Title>\n      <SubTitle>Helsinki, Finland</SubTitle>\n      <Social>\n        <Information>\n          <Numbers>100</Numbers>\n          <Text>Posts</Text>\n        </Information>\n        <Information>\n          <Numbers>2,242</Numbers>\n          <Text>Follower</Text>\n        </Information>\n        <Information>\n          <Numbers>1,432</Numbers>\n          <Text>Following</Text>\n        </Information>\n      </Social>\n    </Container>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Image1 from \"../images/photo1.png\";\nimport Image2 from \"../images/photo2.png\";\nimport Image3 from \"../images/photo3.png\";\nimport Image4 from \"../images/photo4.png\";\nimport Image5 from \"../images/photo5.png\";\nimport Image6 from \"../images/photo6.png\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(3, 50vh);\n  grid-gap: 1rem;\n  margin-bottom: 60px;\n\n  @media (max-width: 480px) {\n    grid-template-rows: repeat(3, 20vh);\n  }\n\n  @media (min-width: 481px) and (max-width: 768px) {\n    grid-template-rows: repeat(3, 30vh);\n  }\n`;\n\nconst StyledImage = css`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  display: block;\n  border-radius: 20px;\n`;\n\nexport const ImageContainer1 = styled.img`\n  ${StyledImage}\n\n  grid-column: 1 / 2;\n  grid-row: 1 / 1;\n`;\n\nexport const ImageContainer2 = styled.img`\n  ${StyledImage}\n\n  grid-column: 2 / 4;\n  grid-row: 1 / 1;\n`;\n\nexport const ImageContainer3 = styled.img`\n  ${StyledImage}\n\n  grid-column: 1 / 3;\n  grid-row: 2 / 2;\n`;\n\nexport const ImageContainer4 = styled.img`\n  ${StyledImage}\n\n  grid-column: 3 / 4;\n  grid-row: 2 / 4;\n`;\n\nexport const ImageContainer5 = styled.img`\n  ${StyledImage}\n\n  grid-column: 1 / 2;\n  grid-row: 3 / 4;\n`;\n\nexport const ImageContainer6 = styled.img`\n  ${StyledImage}\n\n  grid-column: 2 / 3;\n  grid-row: 3 / 4;\n`;\n\nconst Gallery = () => {\n  return (\n    <Container>\n      <ImageContainer1 src={Image1} />\n\n      <ImageContainer2 src={Image2} />\n\n      <ImageContainer3 src={Image3} />\n\n      <ImageContainer4 src={Image4} />\n\n      <ImageContainer5 src={Image6} />\n\n      <ImageContainer6 src={Image5} />\n    </Container>\n  );\n};\n\nexport default Gallery;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Footer from \"./components/footer\";\nimport Header from \"./components/header\";\nimport Gallery from \"./components/gallery\";\n\nexport const Container = styled.header`\n  min-height: 100vh;\n  display: grid;\n  justify-content: center;\n\n  grid-template-columns: 100%;\n  grid-gap: 10px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  margin-left: 200px;\n  margin-right: 200px;\n  grid-template-areas:\n    \"header\"\n    \"main\"\n    \"footer\";\n\n  @media (max-width: 480px) {\n    margin: 12px;\n  }\n\n  @media (min-width: 481px) and (max-width: 780px) {\n    margin: 50px;\n  }\n`;\n\nexport const GridHeader = styled.header`\n  grid-area: header;\n`;\n\nexport const GridMain = styled.div`\n  grid-area: main;\n`;\n\nexport const GridFooter = styled.footer`\n  grid-area: footer;\n`;\n\nconst Home = () => {\n  return (\n    <Container>\n      <GridHeader>\n        <Header />\n      </GridHeader>\n      <GridMain>\n        <Gallery />\n      </GridMain>\n      <GridFooter>\n        <Footer />\n      </GridFooter>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport Home from \"./Home\";\n\nfunction App() {\n  return (\n    <div>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}